import SimpleGraph : '../../model/SimpleGraph.ecore'::simplegraph;
import SimpleGraph2Graph : '../../model/SimpleGraph2Graph.ecore'::simplegraph2graph;

transformation copyGraph {
	upperGraph imports SimpleGraph;
	lowerGraph imports SimpleGraph;
	imports SimpleGraph2Graph;
}

map upper2lower in copyGraph {
	map {	        							-- L to M for G
	    check upperGraph() {
	        g1:Graph |
	    }
	    where () {
	        realize g2g:Graph2Graph |
	        g2g.graph1 := g1;
	    }
        map {
            where () {
                g2g.name := g1.name;
            }
        }
	}
	map {
		-- check upperGraph() {}
        enforce lowerGraph() {
            realize g2:Graph |
        }
        where () {
			g2g:Graph2Graph |    -- M to R for G
        }
        map {
            where () {
            	g2g.graph2 := g2;
            	g2.name := g2g.name;
                -- Can I acces g1 from here by navigating g2g.graph1 ??
            }
        }
	}
}

