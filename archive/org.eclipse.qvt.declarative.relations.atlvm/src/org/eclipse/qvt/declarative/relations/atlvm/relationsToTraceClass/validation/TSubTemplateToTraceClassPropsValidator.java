/**
 * <copyright>
 * </copyright>
 *
 * $Id: TSubTemplateToTraceClassPropsValidator.java,v 1.1 2009/02/23 18:14:58 qglineur Exp $
 */
package org.eclipse.qvt.declarative.relations.atlvm.relationsToTraceClass.validation;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EReference;

import org.eclipse.ocl.ecore.Variable;

import org.eclipse.qvt.declarative.ecore.QVTTemplate.ObjectTemplateExp;
import org.eclipse.qvt.declarative.ecore.QVTTemplate.PropertyTemplateItem;

/**
 * A sample validator interface for {@link org.eclipse.qvt.declarative.relations.atlvm.relationsToTraceClass.TSubTemplateToTraceClassProps}.
 * This doesn't really do anything, and it's not a real EMF artifact.
 * It was generated by the org.eclipse.emf.examples.generator.validator plug-in to illustrate how EMF's code generator can be extended.
 * This can be disabled with -vmargs -Dorg.eclipse.emf.examples.generator.validator=false.
 */
public interface TSubTemplateToTraceClassPropsValidator {
	boolean validate();

	boolean validateC(EClass value);
	boolean validateTv(Variable value);
	boolean validateTp(ObjectTemplateExp value);
	boolean validatePt(PropertyTemplateItem value);
	boolean validateT(ObjectTemplateExp value);
	boolean validateA(EReference value);
	boolean validateRc(EClass value);
}
