### Eclipse Workspace Patch 1.0
#P org.eclipse.ocl
Index: src/org/eclipse/ocl/lpg/AbstractBasicEnvironment.java
===================================================================
RCS file: /cvsroot/modeling/org.eclipse.mdt/org.eclipse.ocl/plugins/org.eclipse.ocl/src/org/eclipse/ocl/lpg/AbstractBasicEnvironment.java,v
retrieving revision 1.3
diff -u -r1.3 AbstractBasicEnvironment.java
--- src/org/eclipse/ocl/lpg/AbstractBasicEnvironment.java	6 Nov 2007 20:02:10 -0000	1.3
+++ src/org/eclipse/ocl/lpg/AbstractBasicEnvironment.java	24 Aug 2008 19:51:42 -0000
@@ -172,6 +172,7 @@
 	public void initASTMapping(Object astNode, CSTNode cstNode) {
 		if ((astNode != null) && (cstNode != null)) {
 			CSTNode oldCSTNode = getASTNodeToCSTNodeMap().put(astNode, cstNode);
+			cstNode.setAstNode(astNode);
 			if (oldCSTNode != null && OCLPlugin.shouldTrace(OCLDebugOptions.PARSING)) {
 				OCLPlugin.trace("Displaced " + oldCSTNode); //$NON-NLS-1$
 			}
Index: src/org/eclipse/ocl/lpg/AbstractLexer.java
===================================================================
RCS file: /cvsroot/modeling/org.eclipse.mdt/org.eclipse.ocl/plugins/org.eclipse.ocl/src/org/eclipse/ocl/lpg/AbstractLexer.java,v
retrieving revision 1.1
diff -u -r1.1 AbstractLexer.java
--- src/org/eclipse/ocl/lpg/AbstractLexer.java	11 Oct 2007 23:04:53 -0000	1.1
+++ src/org/eclipse/ocl/lpg/AbstractLexer.java	24 Aug 2008 19:51:43 -0000
@@ -99,6 +99,8 @@
 	public BasicEnvironment getEnvironment() {
 		return environment;
 	}
+	
+    public abstract int [] getKeywordKinds();
 
 	public void lexToTokens(AbstractParser parser) {
 		lexToTokens(null, parser);
Index: src/org/eclipse/ocl/lpg/LexerTemplateD.g
===================================================================
RCS file: /cvsroot/modeling/org.eclipse.mdt/org.eclipse.ocl/plugins/org.eclipse.ocl/src/org/eclipse/ocl/lpg/LexerTemplateD.g,v
retrieving revision 1.1
diff -u -r1.1 LexerTemplateD.g
--- src/org/eclipse/ocl/lpg/LexerTemplateD.g	11 Oct 2007 23:04:53 -0000	1.1
+++ src/org/eclipse/ocl/lpg/LexerTemplateD.g	24 Aug 2008 19:51:43 -0000
@@ -169,13 +169,17 @@
         	return oclEnvironment;
         }
 
+        @Override
         public int [] getKeywordKinds() { return kwLexer.getKeywordKinds(); }
+
         public int getLeftSpan() { return lexParser.getFirstToken(); }
         public $prs_stream_class getParser() { return parser; }
         public int getRhsFirstTokenIndex(int i) { return lexParser.getFirstToken(i); }
         public int getRhsLastTokenIndex(int i) { return lexParser.getLastToken(i); }
         public int getRightSpan() { return lexParser.getLastToken(); }
-        @Override public int getToken(int i) { return lexParser.getToken(i); }
+
+        @Override
+        public int getToken(int i) { return lexParser.getToken(i); }
 
         @Override
         public void initialize(char [] content, String filename)
Index: src/org/eclipse/ocl/lpg/AbstractParser.java
===================================================================
RCS file: /cvsroot/modeling/org.eclipse.mdt/org.eclipse.ocl/plugins/org.eclipse.ocl/src/org/eclipse/ocl/lpg/AbstractParser.java,v
retrieving revision 1.2
diff -u -r1.2 AbstractParser.java
--- src/org/eclipse/ocl/lpg/AbstractParser.java	6 Nov 2007 19:49:00 -0000	1.2
+++ src/org/eclipse/ocl/lpg/AbstractParser.java	24 Aug 2008 19:51:43 -0000
@@ -127,8 +127,8 @@
 	 * @param startEnd <code>IToken</code> to retrieve offsets from
 	 */
 	protected void setOffsets(CSTNode cstNode, IToken startEnd) {
-		cstNode.setStartOffset(startEnd.getStartOffset());
-		cstNode.setEndOffset(startEnd.getEndOffset());
+		cstNode.setStartToken(startEnd);
+		cstNode.setEndToken(startEnd);
 	}
 
 	/**
@@ -139,8 +139,8 @@
 	 * @param startEnd <code>CSTNode</code> to retrieve offsets from
 	 */
 	protected void setOffsets(CSTNode cstNode, CSTNode startEnd) {
-		cstNode.setStartOffset(startEnd.getStartOffset());
-		cstNode.setEndOffset(startEnd.getEndOffset());
+		cstNode.setStartToken(startEnd.getStartToken());
+		cstNode.setEndToken(startEnd.getEndToken());
 	}
 
 	/**
@@ -153,8 +153,8 @@
 	 * @param end <code>CSTNode</code> to retrieve end offset from
 	 */
 	protected void setOffsets(CSTNode cstNode, CSTNode start, CSTNode end) {
-		cstNode.setStartOffset(start.getStartOffset());
-		cstNode.setEndOffset(end.getEndOffset());
+		cstNode.setStartToken(start.getStartToken());
+		cstNode.setEndToken(end.getEndToken());
 	}
 
 	/**
@@ -167,8 +167,8 @@
 	 * @param end <code>IToken</code> to retrieve end offset from
 	 */
 	protected void setOffsets(CSTNode cstNode, CSTNode start, IToken end) {
-		cstNode.setStartOffset(start.getStartOffset());
-		cstNode.setEndOffset(end.getEndOffset());
+		cstNode.setStartToken(start.getStartToken());
+		cstNode.setEndToken(end);
 	}
 
 	/**
@@ -181,8 +181,8 @@
 	 * @param end <code>CSTNode</code> to retrieve end offset from
 	 */
 	protected void setOffsets(CSTNode cstNode, IToken start, CSTNode end) {
-		cstNode.setStartOffset(start.getStartOffset());
-		cstNode.setEndOffset(end.getEndOffset());
+		cstNode.setStartToken(start);
+		cstNode.setEndToken(end.getEndToken());
 	}
 
 	/**
@@ -195,8 +195,8 @@
 	 * @param end <code>IToken</code> to retrieve end offset from
 	 */
 	protected void setOffsets(CSTNode cstNode, IToken start, IToken end) {
-		cstNode.setStartOffset(start.getStartOffset());
-		cstNode.setEndOffset(end.getEndOffset());
+		cstNode.setStartToken(start);
+		cstNode.setEndToken(end);
 	}
 
 	/**
Index: META-INF/MANIFEST.MF
===================================================================
RCS file: /cvsroot/modeling/org.eclipse.mdt/org.eclipse.ocl/plugins/org.eclipse.ocl/META-INF/MANIFEST.MF,v
retrieving revision 1.7
diff -u -r1.7 MANIFEST.MF
--- META-INF/MANIFEST.MF	28 Mar 2008 20:33:33 -0000	1.7
+++ META-INF/MANIFEST.MF	24 Aug 2008 19:51:42 -0000
@@ -2,7 +2,7 @@
 Bundle-ManifestVersion: 2
 Bundle-Name: %Plugin.name
 Bundle-SymbolicName: org.eclipse.ocl;singleton:=true
-Bundle-Version: 1.2.0.qualifier
+Bundle-Version: 1.2.90.qualifier
 Bundle-ClassPath: .
 Bundle-Vendor: %Plugin.providerName
 Bundle-Localization: plugin
Index: plugin.xml
===================================================================
RCS file: /cvsroot/modeling/org.eclipse.mdt/org.eclipse.ocl/plugins/org.eclipse.ocl/plugin.xml,v
retrieving revision 1.3
diff -u -r1.3 plugin.xml
--- plugin.xml	21 Feb 2008 14:43:00 -0000	1.3
+++ plugin.xml	24 Aug 2008 19:51:42 -0000
@@ -32,4 +32,11 @@
        genModel = "model/OCL.genmodel" /> 
   </extension>
 
+  <extension point="org.eclipse.emf.ecore.generated_package">
+    <package 
+       uri = "http://www.eclipse.org/ocl/1.1.0/OCL/CST" 
+       class = "org.eclipse.ocl.cst.CSTPackage"
+       genModel = "model/OCLCST.genmodel" /> 
+  </extension>
+
 </plugin>
Index: src/org/eclipse/ocl/cst/impl/CSTNodeImpl.java
===================================================================
RCS file: /cvsroot/modeling/org.eclipse.mdt/org.eclipse.ocl/plugins/org.eclipse.ocl/src/org/eclipse/ocl/cst/impl/CSTNodeImpl.java,v
retrieving revision 1.1
diff -u -r1.1 CSTNodeImpl.java
--- src/org/eclipse/ocl/cst/impl/CSTNodeImpl.java	11 Oct 2007 23:05:01 -0000	1.1
+++ src/org/eclipse/ocl/cst/impl/CSTNodeImpl.java	24 Aug 2008 19:51:42 -0000
@@ -16,6 +16,8 @@
  */
 package org.eclipse.ocl.cst.impl;
 
+import lpg.lpgjavaruntime.IToken;
+
 import org.eclipse.emf.common.notify.Notification;
 import org.eclipse.emf.ecore.EClass;
 import org.eclipse.emf.ecore.impl.ENotificationImpl;
@@ -30,8 +32,9 @@
  * <p>
  * The following features are implemented:
  * <ul>
- *   <li>{@link org.eclipse.ocl.cst.impl.CSTNodeImpl#getStartOffset <em>Start Offset</em>}</li>
- *   <li>{@link org.eclipse.ocl.cst.impl.CSTNodeImpl#getEndOffset <em>End Offset</em>}</li>
+ *   <li>{@link org.eclipse.ocl.cst.impl.CSTNodeImpl#getStartToken <em>Start Token</em>}</li>
+ *   <li>{@link org.eclipse.ocl.cst.impl.CSTNodeImpl#getEndToken <em>End Token</em>}</li>
+ *   <li>{@link org.eclipse.ocl.cst.impl.CSTNodeImpl#getAstNode <em>Ast Node</em>}</li>
  * </ul>
  * </p>
  *
@@ -39,190 +42,261 @@
  */
 public abstract class CSTNodeImpl extends EObjectImpl implements CSTNode {
 	/**
-     * The default value of the '{@link #getStartOffset() <em>Start Offset</em>}' attribute.
-     * <!-- begin-user-doc -->
+	 * The default value of the '{@link #getStartToken() <em>Start Token</em>}' attribute.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @see #getStartToken()
+	 * @generated
+	 * @ordered
+	 */
+	protected static final IToken START_TOKEN_EDEFAULT = null;
+
+	/**
+	 * The cached value of the '{@link #getStartToken() <em>Start Token</em>}' attribute.
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @see #getStartToken()
+	 * @generated
+	 * @ordered
+	 */
+	protected IToken startToken = START_TOKEN_EDEFAULT;
+
+	/**
+	 * The default value of the '{@link #getEndToken() <em>End Token</em>}' attribute.
+	 * <!-- begin-user-doc -->
 	 * <!-- end-user-doc -->
-     * @see #getStartOffset()
-     * @generated
-     * @ordered
-     */
-	protected static final int START_OFFSET_EDEFAULT = 0;
+	 * @see #getEndToken()
+	 * @generated
+	 * @ordered
+	 */
+	protected static final IToken END_TOKEN_EDEFAULT = null;
 
 	/**
-     * The cached value of the '{@link #getStartOffset() <em>Start Offset</em>}' attribute.
-     * <!-- begin-user-doc -->
+	 * The cached value of the '{@link #getEndToken() <em>End Token</em>}' attribute.
+	 * <!-- begin-user-doc -->
 	 * <!-- end-user-doc -->
-     * @see #getStartOffset()
-     * @generated
-     * @ordered
-     */
-	protected int startOffset = START_OFFSET_EDEFAULT;
+	 * @see #getEndToken()
+	 * @generated
+	 * @ordered
+	 */
+	protected IToken endToken = END_TOKEN_EDEFAULT;
 
 	/**
-     * The default value of the '{@link #getEndOffset() <em>End Offset</em>}' attribute.
-     * <!-- begin-user-doc -->
+	 * The default value of the '{@link #getAstNode() <em>Ast Node</em>}' attribute.
+	 * <!-- begin-user-doc -->
 	 * <!-- end-user-doc -->
-     * @see #getEndOffset()
-     * @generated
-     * @ordered
-     */
-	protected static final int END_OFFSET_EDEFAULT = 0;
+	 * @see #getAstNode()
+	 * @generated
+	 * @ordered
+	 */
+	protected static final Object AST_NODE_EDEFAULT = null;
 
 	/**
-     * The cached value of the '{@link #getEndOffset() <em>End Offset</em>}' attribute.
-     * <!-- begin-user-doc -->
+	 * The cached value of the '{@link #getAstNode() <em>Ast Node</em>}' attribute.
+	 * <!-- begin-user-doc -->
 	 * <!-- end-user-doc -->
-     * @see #getEndOffset()
-     * @generated
-     * @ordered
-     */
-	protected int endOffset = END_OFFSET_EDEFAULT;
+	 * @see #getAstNode()
+	 * @generated
+	 * @ordered
+	 */
+	protected Object astNode = AST_NODE_EDEFAULT;
 
 	/**
-     * <!-- begin-user-doc -->
+	 * <!-- begin-user-doc -->
 	 * <!-- end-user-doc -->
-     * @generated
-     */
+	 * @generated
+	 */
 	protected CSTNodeImpl() {
-        super();
-    }
+		super();
+	}
 
 	/**
-     * <!-- begin-user-doc -->
+	 * <!-- begin-user-doc -->
 	 * <!-- end-user-doc -->
-     * @generated
-     */
+	 * @generated
+	 */
 	@Override
 	protected EClass eStaticClass() {
-        return CSTPackage.Literals.CST_NODE;
-    }
+		return CSTPackage.Literals.CST_NODE;
+	}
 
 	/**
-     * <!-- begin-user-doc -->
+	 * <!-- begin-user-doc -->
 	 * <!-- end-user-doc -->
-     * @generated
-     */
-	public int getStartOffset() {
-        return startOffset;
-    }
+	 * @generated
+	 */
+	public IToken getStartToken() {
+		return startToken;
+	}
 
 	/**
-     * <!-- begin-user-doc -->
+	 * <!-- begin-user-doc -->
 	 * <!-- end-user-doc -->
-     * @generated
-     */
-	public void setStartOffset(int newStartOffset) {
-        int oldStartOffset = startOffset;
-        startOffset = newStartOffset;
-        if (eNotificationRequired())
-            eNotify(new ENotificationImpl(this, Notification.SET, CSTPackage.CST_NODE__START_OFFSET, oldStartOffset, startOffset));
-    }
+	 * @generated
+	 */
+	public void setStartToken(IToken newStartToken) {
+		IToken oldStartToken = startToken;
+		startToken = newStartToken;
+		if (eNotificationRequired())
+			eNotify(new ENotificationImpl(this, Notification.SET, CSTPackage.CST_NODE__START_TOKEN, oldStartToken, startToken));
+	}
 
 	/**
-     * <!-- begin-user-doc -->
+	 * <!-- begin-user-doc -->
 	 * <!-- end-user-doc -->
-     * @generated
-     */
-	public int getEndOffset() {
-        return endOffset;
-    }
+	 * @generated
+	 */
+	public IToken getEndToken() {
+		return endToken;
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public void setEndToken(IToken newEndToken) {
+		IToken oldEndToken = endToken;
+		endToken = newEndToken;
+		if (eNotificationRequired())
+			eNotify(new ENotificationImpl(this, Notification.SET, CSTPackage.CST_NODE__END_TOKEN, oldEndToken, endToken));
+	}
 
 	/**
-     * <!-- begin-user-doc -->
+	 * <!-- begin-user-doc -->
 	 * <!-- end-user-doc -->
-     * @generated
-     */
-	public void setEndOffset(int newEndOffset) {
-        int oldEndOffset = endOffset;
-        endOffset = newEndOffset;
-        if (eNotificationRequired())
-            eNotify(new ENotificationImpl(this, Notification.SET, CSTPackage.CST_NODE__END_OFFSET, oldEndOffset, endOffset));
-    }
+	 * @generated
+	 */
+	public Object getAstNode() {
+		return astNode;
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated
+	 */
+	public void setAstNode(Object newAstNode) {
+		Object oldAstNode = astNode;
+		astNode = newAstNode;
+		if (eNotificationRequired())
+			eNotify(new ENotificationImpl(this, Notification.SET, CSTPackage.CST_NODE__AST_NODE, oldAstNode, astNode));
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated NOT
+	 */
+	public int getStartOffset() {
+		return startToken != null ? startToken.getStartOffset() : 0;
+	}
+
+	/**
+	 * <!-- begin-user-doc -->
+	 * <!-- end-user-doc -->
+	 * @generated NOT
+	 */
+	public int getEndOffset() {
+		return endToken != null ? endToken.getEndOffset() : -1;
+	}
 
 	/**
-     * <!-- begin-user-doc -->
+	 * <!-- begin-user-doc -->
 	 * <!-- end-user-doc -->
-     * @generated
-     */
+	 * @generated
+	 */
 	@Override
 	public Object eGet(int featureID, boolean resolve, boolean coreType) {
-        switch (featureID) {
-            case CSTPackage.CST_NODE__START_OFFSET:
-                return new Integer(getStartOffset());
-            case CSTPackage.CST_NODE__END_OFFSET:
-                return new Integer(getEndOffset());
-        }
-        return super.eGet(featureID, resolve, coreType);
-    }
+		switch (featureID) {
+			case CSTPackage.CST_NODE__START_TOKEN:
+				return getStartToken();
+			case CSTPackage.CST_NODE__END_TOKEN:
+				return getEndToken();
+			case CSTPackage.CST_NODE__AST_NODE:
+				return getAstNode();
+		}
+		return super.eGet(featureID, resolve, coreType);
+	}
 
 	/**
-     * <!-- begin-user-doc -->
+	 * <!-- begin-user-doc -->
 	 * <!-- end-user-doc -->
-     * @generated
-     */
+	 * @generated
+	 */
 	@Override
 	public void eSet(int featureID, Object newValue) {
-        switch (featureID) {
-            case CSTPackage.CST_NODE__START_OFFSET:
-                setStartOffset(((Integer)newValue).intValue());
-                return;
-            case CSTPackage.CST_NODE__END_OFFSET:
-                setEndOffset(((Integer)newValue).intValue());
-                return;
-        }
-        super.eSet(featureID, newValue);
-    }
+		switch (featureID) {
+			case CSTPackage.CST_NODE__START_TOKEN:
+				setStartToken((IToken)newValue);
+				return;
+			case CSTPackage.CST_NODE__END_TOKEN:
+				setEndToken((IToken)newValue);
+				return;
+			case CSTPackage.CST_NODE__AST_NODE:
+				setAstNode(newValue);
+				return;
+		}
+		super.eSet(featureID, newValue);
+	}
 
 	/**
-     * <!-- begin-user-doc -->
+	 * <!-- begin-user-doc -->
 	 * <!-- end-user-doc -->
-     * @generated
-     */
+	 * @generated
+	 */
 	@Override
 	public void eUnset(int featureID) {
-        switch (featureID) {
-            case CSTPackage.CST_NODE__START_OFFSET:
-                setStartOffset(START_OFFSET_EDEFAULT);
-                return;
-            case CSTPackage.CST_NODE__END_OFFSET:
-                setEndOffset(END_OFFSET_EDEFAULT);
-                return;
-        }
-        super.eUnset(featureID);
-    }
+		switch (featureID) {
+			case CSTPackage.CST_NODE__START_TOKEN:
+				setStartToken(START_TOKEN_EDEFAULT);
+				return;
+			case CSTPackage.CST_NODE__END_TOKEN:
+				setEndToken(END_TOKEN_EDEFAULT);
+				return;
+			case CSTPackage.CST_NODE__AST_NODE:
+				setAstNode(AST_NODE_EDEFAULT);
+				return;
+		}
+		super.eUnset(featureID);
+	}
 
 	/**
-     * <!-- begin-user-doc -->
+	 * <!-- begin-user-doc -->
 	 * <!-- end-user-doc -->
-     * @generated
-     */
+	 * @generated
+	 */
 	@Override
 	public boolean eIsSet(int featureID) {
-        switch (featureID) {
-            case CSTPackage.CST_NODE__START_OFFSET:
-                return startOffset != START_OFFSET_EDEFAULT;
-            case CSTPackage.CST_NODE__END_OFFSET:
-                return endOffset != END_OFFSET_EDEFAULT;
-        }
-        return super.eIsSet(featureID);
-    }
+		switch (featureID) {
+			case CSTPackage.CST_NODE__START_TOKEN:
+				return START_TOKEN_EDEFAULT == null ? startToken != null : !START_TOKEN_EDEFAULT.equals(startToken);
+			case CSTPackage.CST_NODE__END_TOKEN:
+				return END_TOKEN_EDEFAULT == null ? endToken != null : !END_TOKEN_EDEFAULT.equals(endToken);
+			case CSTPackage.CST_NODE__AST_NODE:
+				return AST_NODE_EDEFAULT == null ? astNode != null : !AST_NODE_EDEFAULT.equals(astNode);
+		}
+		return super.eIsSet(featureID);
+	}
 
 	/**
-     * <!-- begin-user-doc -->
+	 * <!-- begin-user-doc -->
 	 * <!-- end-user-doc -->
-     * @generated
-     */
+	 * @generated
+	 */
 	@Override
 	public String toString() {
-        if (eIsProxy()) return super.toString();
+		if (eIsProxy()) return super.toString();
 
-        StringBuffer result = new StringBuffer(super.toString());
-        result.append(" (startOffset: "); //$NON-NLS-1$
-        result.append(startOffset);
-        result.append(", endOffset: "); //$NON-NLS-1$
-        result.append(endOffset);
-        result.append(')');
-        return result.toString();
-    }
+		StringBuffer result = new StringBuffer(super.toString());
+		result.append(" (startToken: "); //$NON-NLS-1$
+		result.append(startToken);
+		result.append(", endToken: "); //$NON-NLS-1$
+		result.append(endToken);
+		result.append(", astNode: "); //$NON-NLS-1$
+		result.append(astNode);
+		result.append(')');
+		return result.toString();
+	}
 
 } //CSTNodeImpl
Index: src/org/eclipse/ocl/parser/AbstractOCLParser.java
===================================================================
RCS file: /cvsroot/modeling/org.eclipse.mdt/org.eclipse.ocl/plugins/org.eclipse.ocl/src/org/eclipse/ocl/parser/AbstractOCLParser.java,v
retrieving revision 1.1
diff -u -r1.1 AbstractOCLParser.java
--- src/org/eclipse/ocl/parser/AbstractOCLParser.java	11 Oct 2007 23:05:00 -0000	1.1
+++ src/org/eclipse/ocl/parser/AbstractOCLParser.java	24 Aug 2008 19:51:46 -0000
@@ -156,32 +156,28 @@
 	
 	protected ClassifierContextDeclCS createClassifierContextDeclCS(
 			PathNameCS pathNameCS,
-			InvOrDefCS invOrDefCS) {
+			EList<InvOrDefCS> list) {
 		ClassifierContextDeclCS result = CSTFactory.eINSTANCE.createClassifierContextDeclCS();
 		result.setPathNameCS(pathNameCS);
-		result.setInvOrDefCS(invOrDefCS);
+		result.getInvOrDefCS().addAll(list);
 		return result;
 	}
 	
 	protected InvCS createInvCS(
-			InvOrDefCS invOrDefCS,
 			SimpleNameCS simpleNameCS,
 			OCLExpressionCS oclExpressionCS) {
 		InvCS result = CSTFactory.eINSTANCE.createInvCS();
 		result.setSimpleNameCS(simpleNameCS);
 		result.setExpressionCS(oclExpressionCS);
-		result.setInvOrDefCS(invOrDefCS);
 		return result;
 	}
 	
 	protected DefCS createDefCS(
-			InvOrDefCS invOrDefCS,
 			SimpleNameCS simpleNameCS,
 			DefExpressionCS defExpressionCS) {
 		DefCS result = CSTFactory.eINSTANCE.createDefCS();
 		result.setSimpleNameCS(simpleNameCS);
 		result.setDefExpressionCS(defExpressionCS);
-		result.setInvOrDefCS(invOrDefCS);
 		return result;
 	}
 	
Index: src/org/eclipse/ocl/parser/AbstractOCLAnalyzer.java
===================================================================
RCS file: /cvsroot/modeling/org.eclipse.mdt/org.eclipse.ocl/plugins/org.eclipse.ocl/src/org/eclipse/ocl/parser/AbstractOCLAnalyzer.java,v
retrieving revision 1.11
diff -u -r1.11 AbstractOCLAnalyzer.java
--- src/org/eclipse/ocl/parser/AbstractOCLAnalyzer.java	4 May 2008 01:17:02 -0000	1.11
+++ src/org/eclipse/ocl/parser/AbstractOCLAnalyzer.java	24 Aug 2008 19:51:46 -0000
@@ -1211,17 +1211,7 @@
         
 		TRACE("classifierContextDeclCS", "context", pathName);  //$NON-NLS-2$//$NON-NLS-1$
 		
-        // reverse the chain of constraint declarations to process them in the
-        // forward order
-		List<InvOrDefCS> constraintDecls = new BasicEList.FastCompare<InvOrDefCS>(4);
-        InvOrDefCS invOrDefCS = classifierContextDeclCS.getInvOrDefCS();
-        while (invOrDefCS != null) {
-            constraintDecls.add(0, invOrDefCS);
-            invOrDefCS = invOrDefCS.getInvOrDefCS();
-        }
-        
-        // now, parse them
-		for (InvOrDefCS decl : constraintDecls) {
+		for (InvOrDefCS decl : classifierContextDeclCS.getInvOrDefCS()) {
 			CT constraint = invOrDefCS(decl, result);
 			if (constraint != null) {
 				constraints.add(constraint);
Index: src/org/eclipse/ocl/parser/OCLParser.g
===================================================================
RCS file: /cvsroot/modeling/org.eclipse.mdt/org.eclipse.ocl/plugins/org.eclipse.ocl/src/org/eclipse/ocl/parser/OCLParser.g,v
retrieving revision 1.1
diff -u -r1.1 OCLParser.g
--- src/org/eclipse/ocl/parser/OCLParser.g	11 Oct 2007 23:05:00 -0000	1.1
+++ src/org/eclipse/ocl/parser/OCLParser.g	24 Aug 2008 19:51:47 -0000
@@ -186,49 +186,50 @@
 		/.$NullAction./
 	initOrDerValueCSopt -> initOrDerValueCS
 
-	classifierContextDeclCS ::= context pathNameCS invOrDefCS
+	classifierContextDeclCS ::= context pathNameCS invOrDefCSm
 		/.$BeginJava
+					EList<InvOrDefCS> list = (EList<InvOrDefCS>)$getSym(3);
 					CSTNode result = createClassifierContextDeclCS(
 							(PathNameCS)$getSym(2),
-							(InvOrDefCS)$getSym(3)
+							list
 						);
-					setOffsets(result, getIToken($getToken(1)), (CSTNode)$getSym(3));
+					setOffsets(result, getIToken($getToken(1)), list.get(list.size()-1));
 					$setResult(result);
 		  $EndJava
 		./
 
-	invOrDefCSopt ::= $empty
-		/.$NullAction./
-	invOrDefCSopt -> invOrDefCS
-
-	invOrDefCS ::= invOrDefCSopt inv simpleNameCSopt ':' oclExpressionCS
+	invOrDefCSm ::= invOrDefCS
+		/.$BeginJava
+					EList<InvOrDefCS> result = new BasicEList<InvOrDefCS>();
+					result.add((InvOrDefCS)$getSym(1));
+					$setResult(result);
+		  $EndJava
+		./
+	invOrDefCSm ::= invOrDefCSm invOrDefCS
+		/.$BeginJava
+					EList<InvOrDefCS> result = (EList<InvOrDefCS>)$getSym(1);
+					result.add((InvOrDefCS)$getSym(2));
+					$setResult(result);
+		  $EndJava
+		./
+	invOrDefCS ::= inv simpleNameCSopt ':' oclExpressionCS
 		/.$BeginJava
 					CSTNode result = createInvCS(
-							(InvOrDefCS)$getSym(1),
-							(SimpleNameCS)$getSym(3),
-							(OCLExpressionCS)$getSym(5)
+							(SimpleNameCS)$getSym(2),
+							(OCLExpressionCS)$getSym(4)
 						);
-					if ($getSym(1) != null) {
-						setOffsets(result, (CSTNode)$getSym(1), (CSTNode)$getSym(5));
-					} else {
-						setOffsets(result, getIToken($getToken(2)), (CSTNode)$getSym(5));
-					}
+					setOffsets(result, getIToken($getToken(1)), (CSTNode)$getSym(4));
 					$setResult(result);
 		  $EndJava
 		./
 	
-	invOrDefCS ::= invOrDefCSopt def simpleNameCSopt ':' defExpressionCS
+	invOrDefCS ::= def simpleNameCSopt ':' defExpressionCS
 		/.$BeginJava
 					CSTNode result = createDefCS(
-							(InvOrDefCS)$getSym(1),
-							(SimpleNameCS)$getSym(3),
-							(DefExpressionCS)$getSym(5)
-						);
-					if ($getSym(1) != null) {
-						setOffsets(result, (CSTNode)$getSym(1), (CSTNode)$getSym(5));
-					} else {
-						setOffsets(result, getIToken($getToken(2)), (CSTNode)$getSym(5));
-					}
+							(SimpleNameCS)$getSym(2),
+							(DefExpressionCS)$getSym(4)
+						);
+					setOffsets(result, getIToken($getToken(1)), (CSTNode)$getSym(4));
 					$setResult(result);
 		  $EndJava
 		./
Index: src/org/eclipse/ocl/parser/EssentialOCL.g
===================================================================
RCS file: /cvsroot/modeling/org.eclipse.mdt/org.eclipse.ocl/plugins/org.eclipse.ocl/src/org/eclipse/ocl/parser/EssentialOCL.g,v
retrieving revision 1.3
diff -u -r1.3 EssentialOCL.g
--- src/org/eclipse/ocl/parser/EssentialOCL.g	3 Apr 2008 13:00:10 -0000	1.3
+++ src/org/eclipse/ocl/parser/EssentialOCL.g	24 Aug 2008 19:51:47 -0000
@@ -170,8 +170,8 @@
          */
 		protected void setOffsets(CSTNode cstNode) {
 			IToken firstToken = getIToken($getToken(1));
-			cstNode.setStartOffset(firstToken.getStartOffset());
-			cstNode.setEndOffset(firstToken.getEndOffset()-1);
+			cstNode.setStartToken(firstToken);
+			cstNode.setEndToken(firstToken);
 		}
 	./
 $End
@@ -798,12 +798,15 @@
 					String simpleName = text.substring(index + 1);
 
 					// create the IntegerLiteralExpCS
-					int startOffset = getIToken($getToken(1)).getStartOffset();
+					IToken numericToken = getIToken($getToken(1));
+					int startOffset = numericToken.getStartOffset();
 					int endOffset = startOffset + integer.length() - 1; // inclusive
 
 					IntegerLiteralExpCS integerLiteralExpCS = createIntegerLiteralExpCS(integer);
-					integerLiteralExpCS.setStartOffset(startOffset);
-					integerLiteralExpCS.setEndOffset(endOffset);
+//					integerLiteralExpCS.setStartOffset(startOffset);
+//					integerLiteralExpCS.setEndOffset(endOffset);
+					integerLiteralExpCS.setStartToken(numericToken);
+					integerLiteralExpCS.setEndToken(numericToken);
 
 					startOffset = endOffset + 2; // end of integerLiteral + 1('.') + 1(start of simpleName)
 					endOffset = getIToken($getToken(1)).getEndOffset();
@@ -813,8 +816,10 @@
 								SimpleTypeEnum.IDENTIFIER_LITERAL,
 								simpleName
 							);
-					simpleNameCS.setStartOffset(startOffset);
-					simpleNameCS.setEndOffset(endOffset);
+//					simpleNameCS.setStartOffset(startOffset);
+//					simpleNameCS.setEndOffset(endOffset);
+					simpleNameCS.setStartToken(numericToken);
+					simpleNameCS.setEndToken(numericToken);
 
 					// create the OperationCallExpCS
 					CSTNode result = createOperationCallExpCS(
Index: model/OCLCST.ecore
===================================================================
RCS file: /cvsroot/modeling/org.eclipse.mdt/org.eclipse.ocl/plugins/org.eclipse.ocl/model/OCLCST.ecore,v
retrieving revision 1.5
diff -u -r1.5 OCLCST.ecore
--- model/OCLCST.ecore	3 Dec 2007 18:44:41 -0000	1.5
+++ model/OCLCST.ecore	24 Aug 2008 19:51:42 -0000
@@ -5,8 +5,12 @@
     nsURI="http://www.eclipse.org/ocl/1.1.0/OCLCST" nsPrefix="ocl">
   <eSubpackages name="cst" nsURI="http://www.eclipse.org/ocl/1.1.0/OCL/CST" nsPrefix="ocl.cst">
     <eClassifiers xsi:type="ecore:EClass" name="CSTNode" abstract="true">
-      <eStructuralFeatures xsi:type="ecore:EAttribute" name="startOffset" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EInt"/>
-      <eStructuralFeatures xsi:type="ecore:EAttribute" name="endOffset" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EInt"/>
+      <eOperations name="getEndOffset" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EInt"/>
+      <eOperations name="getStartOffset" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EInt"/>
+      <eStructuralFeatures xsi:type="ecore:EAttribute" name="startToken" eType="ecore:EDataType Copy%20of%20OCLCST.ecore#//cst/IToken"/>
+      <eStructuralFeatures xsi:type="ecore:EAttribute" name="endToken" eType="ecore:EDataType Copy%20of%20OCLCST.ecore#//cst/IToken"/>
+      <eStructuralFeatures xsi:type="ecore:EAttribute" name="astNode" eType="ecore:EDataType Copy%20of%20OCLCST.ecore#//cst/Object"
+          transient="true"/>
     </eClassifiers>
     <eClassifiers xsi:type="ecore:EClass" name="PackageDeclarationCS" eSuperTypes="#//cst/CSTNode">
       <eStructuralFeatures xsi:type="ecore:EReference" name="pathNameCS" eType="#//cst/PathNameCS"
@@ -69,13 +73,12 @@
     <eClassifiers xsi:type="ecore:EClass" name="ClassifierContextDeclCS" eSuperTypes="#//cst/ContextDeclCS">
       <eStructuralFeatures xsi:type="ecore:EReference" name="pathNameCS" eType="#//cst/PathNameCS"
           containment="true"/>
-      <eStructuralFeatures xsi:type="ecore:EReference" name="invOrDefCS" eType="#//cst/InvOrDefCS"
-          containment="true"/>
+      <eStructuralFeatures xsi:type="ecore:EReference" name="invOrDefCS" unique="false"
+          upperBound="-1" eType="#//cst/InvOrDefCS" containment="true"/>
     </eClassifiers>
     <eClassifiers xsi:type="ecore:EClass" name="InvOrDefCS" abstract="true" eSuperTypes="#//cst/CSTNode">
       <eStructuralFeatures xsi:type="ecore:EReference" name="simpleNameCS" eType="#//cst/SimpleNameCS"
           containment="true"/>
-      <eStructuralFeatures xsi:type="ecore:EReference" name="invOrDefCS" eType="#//cst/InvOrDefCS"/>
     </eClassifiers>
     <eClassifiers xsi:type="ecore:EClass" name="OperationContextDeclCS" eSuperTypes="#//cst/ContextDeclCS">
       <eStructuralFeatures xsi:type="ecore:EReference" name="operationCS" eType="#//cst/OperationCS"
@@ -300,5 +303,7 @@
       <eStructuralFeatures xsi:type="ecore:EAttribute" name="sequenceOfNames" upperBound="-1"
           eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
     </eClassifiers>
+    <eClassifiers xsi:type="ecore:EDataType" name="IToken" instanceClassName="lpg.lpgjavaruntime.IToken"/>
+    <eClassifiers xsi:type="ecore:EDataType" name="Object" instanceClassName="java.lang.Object"/>
   </eSubpackages>
 </ecore:EPackage>
Index: model/Copy of OCLCST.ecore
===================================================================
RCS file: model/Copy of OCLCST.ecore
diff -N model/Copy of OCLCST.ecore
--- /dev/null	1 Jan 1970 00:00:00 -0000
+++ model/Copy of OCLCST.ecore	1 Jan 1970 00:00:00 -0000
@@ -0,0 +1,309 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<ecore:EPackage xmi:version="2.0"
+    xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+    xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" name="ocl"
+    nsURI="http://www.eclipse.org/ocl/1.1.0/OCLCST" nsPrefix="ocl">
+  <eSubpackages name="cst" nsURI="http://www.eclipse.org/ocl/1.1.0/OCL/CST" nsPrefix="ocl.cst">
+    <eClassifiers xsi:type="ecore:EClass" name="BooleanLiteralExpCS" eSuperTypes="#//cst/PrimitiveLiteralExpCS">
+      <eStructuralFeatures xsi:type="ecore:EAttribute" name="booleanSymbol" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBooleanObject"/>
+    </eClassifiers>
+    <eClassifiers xsi:type="ecore:EClass" name="CSTNode" abstract="true">
+      <eOperations name="getEndOffset" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EInt"/>
+      <eOperations name="getStartOffset" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EInt"/>
+      <eStructuralFeatures xsi:type="ecore:EAttribute" name="startToken" eType="#//cst/IToken"/>
+      <eStructuralFeatures xsi:type="ecore:EAttribute" name="endToken" eType="#//cst/IToken"/>
+      <eStructuralFeatures xsi:type="ecore:EAttribute" name="astNode" eType="#//cst/Object"
+          transient="true"/>
+    </eClassifiers>
+    <eClassifiers xsi:type="ecore:EClass" name="ContextDeclCS" abstract="true" eSuperTypes="#//cst/CSTNode"/>
+    <eClassifiers xsi:type="ecore:EClass" name="CallExpCS" eSuperTypes="#//cst/OCLExpressionCS">
+      <eStructuralFeatures xsi:type="ecore:EReference" name="source" eType="#//cst/OCLExpressionCS"
+          containment="true"/>
+      <eStructuralFeatures xsi:type="ecore:EAttribute" name="accessor" eType="#//cst/DotOrArrowEnum"/>
+      <eStructuralFeatures xsi:type="ecore:EReference" name="simpleNameCS" eType="#//cst/SimpleNameCS"
+          containment="true"/>
+    </eClassifiers>
+    <eClassifiers xsi:type="ecore:EClass" name="ClassifierContextDeclCS" eSuperTypes="#//cst/ContextDeclCS">
+      <eStructuralFeatures xsi:type="ecore:EReference" name="pathNameCS" eType="#//cst/PathNameCS"
+          containment="true"/>
+      <eStructuralFeatures xsi:type="ecore:EReference" name="invOrDefCS" unique="false"
+          upperBound="-1" eType="#//cst/InvOrDefCS" containment="true"/>
+    </eClassifiers>
+    <eClassifiers xsi:type="ecore:EClass" name="CollectionLiteralExpCS" eSuperTypes="#//cst/LiteralExpCS">
+      <eStructuralFeatures xsi:type="ecore:EAttribute" name="collectionType" eType="#//cst/CollectionTypeIdentifierEnum"/>
+      <eStructuralFeatures xsi:type="ecore:EReference" name="collectionLiteralParts"
+          upperBound="-1" eType="#//cst/CollectionLiteralPartCS" containment="true"/>
+    </eClassifiers>
+    <eClassifiers xsi:type="ecore:EClass" name="CollectionLiteralPartCS" eSuperTypes="#//cst/CSTNode">
+      <eStructuralFeatures xsi:type="ecore:EReference" name="expressionCS" eType="#//cst/OCLExpressionCS"
+          containment="true">
+        <eAnnotations source="http:///org/eclipse/emf/ecore/util/ExtendedMetaData">
+          <details key="name" value="oclExpressionCS"/>
+        </eAnnotations>
+      </eStructuralFeatures>
+    </eClassifiers>
+    <eClassifiers xsi:type="ecore:EClass" name="CollectionRangeCS" eSuperTypes="#//cst/CollectionLiteralPartCS">
+      <eStructuralFeatures xsi:type="ecore:EReference" name="lastExpressionCS" eType="#//cst/OCLExpressionCS"
+          containment="true">
+        <eAnnotations source="http:///org/eclipse/emf/ecore/util/ExtendedMetaData">
+          <details key="name" value="lastOclExpressionCS"/>
+        </eAnnotations>
+      </eStructuralFeatures>
+    </eClassifiers>
+    <eClassifiers xsi:type="ecore:EClass" name="CollectionTypeCS" eSuperTypes="#//cst/TypeCS">
+      <eStructuralFeatures xsi:type="ecore:EAttribute" name="collectionTypeIdentifier"
+          eType="#//cst/CollectionTypeIdentifierEnum"/>
+      <eStructuralFeatures xsi:type="ecore:EReference" name="typeCS" eType="#//cst/TypeCS"
+          containment="true"/>
+    </eClassifiers>
+    <eClassifiers xsi:type="ecore:EClass" name="DefCS" eSuperTypes="#//cst/InvOrDefCS">
+      <eStructuralFeatures xsi:type="ecore:EReference" name="defExpressionCS" eType="#//cst/DefExpressionCS"
+          containment="true"/>
+    </eClassifiers>
+    <eClassifiers xsi:type="ecore:EClass" name="DefExpressionCS" eSuperTypes="#//cst/CSTNode">
+      <eStructuralFeatures xsi:type="ecore:EReference" name="operationCS" eType="#//cst/OperationCS"
+          containment="true"/>
+      <eStructuralFeatures xsi:type="ecore:EReference" name="variableCS" eType="#//cst/VariableCS"
+          containment="true"/>
+      <eStructuralFeatures xsi:type="ecore:EReference" name="expressionCS" eType="#//cst/OCLExpressionCS"
+          containment="true">
+        <eAnnotations source="http:///org/eclipse/emf/ecore/util/ExtendedMetaData">
+          <details key="name" value="oclExpressionCS"/>
+        </eAnnotations>
+      </eStructuralFeatures>
+    </eClassifiers>
+    <eClassifiers xsi:type="ecore:EClass" name="DerValueCS" eSuperTypes="#//cst/InitOrDerValueCS"/>
+    <eClassifiers xsi:type="ecore:EClass" name="EnumLiteralExpCS" eSuperTypes="#//cst/LiteralExpCS">
+      <eStructuralFeatures xsi:type="ecore:EReference" name="pathNameCS" eType="#//cst/PathNameCS"
+          containment="true"/>
+      <eStructuralFeatures xsi:type="ecore:EReference" name="simpleNameCS" eType="#//cst/SimpleNameCS"
+          containment="true"/>
+    </eClassifiers>
+    <eClassifiers xsi:type="ecore:EClass" name="FeatureCallExpCS" eSuperTypes="#//cst/CallExpCS">
+      <eStructuralFeatures xsi:type="ecore:EReference" name="arguments" upperBound="-1"
+          eType="#//cst/OCLExpressionCS" containment="true"/>
+      <eStructuralFeatures xsi:type="ecore:EReference" name="isMarkedPreCS" eType="#//cst/IsMarkedPreCS"
+          containment="true"/>
+    </eClassifiers>
+    <eClassifiers xsi:type="ecore:EClass" name="IfExpCS" eSuperTypes="#//cst/OCLExpressionCS">
+      <eStructuralFeatures xsi:type="ecore:EReference" name="condition" lowerBound="1"
+          eType="#//cst/OCLExpressionCS" containment="true"/>
+      <eStructuralFeatures xsi:type="ecore:EReference" name="thenExpression" lowerBound="1"
+          eType="#//cst/OCLExpressionCS" containment="true"/>
+      <eStructuralFeatures xsi:type="ecore:EReference" name="elseExpression" lowerBound="1"
+          eType="#//cst/OCLExpressionCS" containment="true"/>
+    </eClassifiers>
+    <eClassifiers xsi:type="ecore:EClass" name="InvOrDefCS" abstract="true" eSuperTypes="#//cst/CSTNode">
+      <eStructuralFeatures xsi:type="ecore:EReference" name="simpleNameCS" eType="#//cst/SimpleNameCS"
+          containment="true"/>
+    </eClassifiers>
+    <eClassifiers xsi:type="ecore:EClass" name="InitOrDerValueCS" abstract="true"
+        eSuperTypes="#//cst/CSTNode">
+      <eStructuralFeatures xsi:type="ecore:EReference" name="initOrDerValueCS" eType="#//cst/InitOrDerValueCS"
+          containment="true"/>
+      <eStructuralFeatures xsi:type="ecore:EReference" name="expressionCS" eType="#//cst/OCLExpressionCS"
+          containment="true">
+        <eAnnotations source="http:///org/eclipse/emf/ecore/util/ExtendedMetaData">
+          <details key="name" value="oclExpressionCS"/>
+        </eAnnotations>
+      </eStructuralFeatures>
+    </eClassifiers>
+    <eClassifiers xsi:type="ecore:EClass" name="InitValueCS" eSuperTypes="#//cst/InitOrDerValueCS"/>
+    <eClassifiers xsi:type="ecore:EClass" name="IntegerLiteralExpCS" eSuperTypes="#//cst/PrimitiveLiteralExpCS">
+      <eStructuralFeatures xsi:type="ecore:EAttribute" name="integerSymbol" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EIntegerObject"/>
+    </eClassifiers>
+    <eClassifiers xsi:type="ecore:EClass" name="InvCS" eSuperTypes="#//cst/InvOrDefCS">
+      <eStructuralFeatures xsi:type="ecore:EReference" name="expressionCS" eType="#//cst/OCLExpressionCS"
+          containment="true">
+        <eAnnotations source="http:///org/eclipse/emf/ecore/util/ExtendedMetaData">
+          <details key="name" value="oclExpressionCS"/>
+        </eAnnotations>
+      </eStructuralFeatures>
+    </eClassifiers>
+    <eClassifiers xsi:type="ecore:EClass" name="InvalidLiteralExpCS" eSuperTypes="#//cst/LiteralExpCS">
+      <eStructuralFeatures xsi:type="ecore:EAttribute" name="symbol" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
+    </eClassifiers>
+    <eClassifiers xsi:type="ecore:EClass" name="IsMarkedPreCS" eSuperTypes="#//cst/CSTNode">
+      <eStructuralFeatures xsi:type="ecore:EAttribute" name="pre" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
+    </eClassifiers>
+    <eClassifiers xsi:type="ecore:EClass" name="IterateExpCS" eSuperTypes="#//cst/LoopExpCS"/>
+    <eClassifiers xsi:type="ecore:EClass" name="IteratorExpCS" eSuperTypes="#//cst/LoopExpCS"/>
+    <eClassifiers xsi:type="ecore:EClass" name="LetExpCS" eSuperTypes="#//cst/OCLExpressionCS">
+      <eStructuralFeatures xsi:type="ecore:EReference" name="variables" lowerBound="1"
+          upperBound="-1" eType="#//cst/VariableCS" containment="true"/>
+      <eStructuralFeatures xsi:type="ecore:EReference" name="inExpression" eType="#//cst/OCLExpressionCS"
+          containment="true"/>
+    </eClassifiers>
+    <eClassifiers xsi:type="ecore:EClass" name="LoopExpCS" eSuperTypes="#//cst/CallExpCS">
+      <eStructuralFeatures xsi:type="ecore:EReference" name="variable1" eType="#//cst/VariableCS"
+          containment="true"/>
+      <eStructuralFeatures xsi:type="ecore:EReference" name="variable2" eType="#//cst/VariableCS"
+          containment="true"/>
+      <eStructuralFeatures xsi:type="ecore:EReference" name="body" eType="#//cst/OCLExpressionCS"
+          containment="true"/>
+    </eClassifiers>
+    <eClassifiers xsi:type="ecore:EClass" name="LiteralExpCS" abstract="true" eSuperTypes="#//cst/OCLExpressionCS"/>
+    <eClassifiers xsi:type="ecore:EClass" name="MessageExpCS" eSuperTypes="#//cst/OCLExpressionCS">
+      <eStructuralFeatures xsi:type="ecore:EReference" name="target" eType="#//cst/OCLExpressionCS"
+          containment="true"/>
+      <eStructuralFeatures xsi:type="ecore:EAttribute" name="kind" eType="#//cst/MessageExpKind"/>
+      <eStructuralFeatures xsi:type="ecore:EReference" name="simpleNameCS" eType="#//cst/SimpleNameCS"
+          containment="true"/>
+      <eStructuralFeatures xsi:type="ecore:EReference" name="arguments" upperBound="-1"
+          eType="#//cst/OCLMessageArgCS" containment="true"/>
+    </eClassifiers>
+    <eClassifiers xsi:type="ecore:EClass" name="NullLiteralExpCS" eSuperTypes="#//cst/LiteralExpCS">
+      <eStructuralFeatures xsi:type="ecore:EAttribute" name="symbol" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
+    </eClassifiers>
+    <eClassifiers xsi:type="ecore:EClass" name="OCLExpressionCS" abstract="true" eSuperTypes="#//cst/CSTNode">
+      <eAnnotations source="http:///org/eclipse/emf/ecore/util/ExtendedMetaData">
+        <details key="name" value="OclExpressionCS"/>
+      </eAnnotations>
+    </eClassifiers>
+    <eClassifiers xsi:type="ecore:EClass" name="OCLMessageArgCS" eSuperTypes="#//cst/CSTNode">
+      <eAnnotations source="http:///org/eclipse/emf/ecore/util/ExtendedMetaData">
+        <details key="name" value="OclMessageArgCS"/>
+      </eAnnotations>
+      <eStructuralFeatures xsi:type="ecore:EReference" name="typeCS" eType="#//cst/TypeCS"
+          containment="true"/>
+      <eStructuralFeatures xsi:type="ecore:EReference" name="expression" eType="#//cst/OCLExpressionCS"
+          containment="true">
+        <eAnnotations source="http:///org/eclipse/emf/ecore/util/ExtendedMetaData">
+          <details key="name" value="oclExpression"/>
+        </eAnnotations>
+      </eStructuralFeatures>
+    </eClassifiers>
+    <eClassifiers xsi:type="ecore:EClass" name="OperationCS" eSuperTypes="#//cst/CSTNode">
+      <eStructuralFeatures xsi:type="ecore:EReference" name="pathNameCS" eType="#//cst/PathNameCS"
+          containment="true"/>
+      <eStructuralFeatures xsi:type="ecore:EReference" name="simpleNameCS" eType="#//cst/SimpleNameCS"
+          containment="true"/>
+      <eStructuralFeatures xsi:type="ecore:EReference" name="parameters" upperBound="-1"
+          eType="#//cst/VariableCS" containment="true"/>
+      <eStructuralFeatures xsi:type="ecore:EReference" name="typeCS" eType="#//cst/TypeCS"
+          containment="true"/>
+    </eClassifiers>
+    <eClassifiers xsi:type="ecore:EClass" name="OperationCallExpCS" eSuperTypes="#//cst/FeatureCallExpCS"/>
+    <eClassifiers xsi:type="ecore:EClass" name="OperationContextDeclCS" eSuperTypes="#//cst/ContextDeclCS">
+      <eStructuralFeatures xsi:type="ecore:EReference" name="operationCS" eType="#//cst/OperationCS"
+          containment="true"/>
+      <eStructuralFeatures xsi:type="ecore:EReference" name="prePostOrBodyDecls" lowerBound="1"
+          upperBound="-1" eType="#//cst/PrePostOrBodyDeclCS" containment="true"/>
+    </eClassifiers>
+    <eClassifiers xsi:type="ecore:EClass" name="PackageDeclarationCS" eSuperTypes="#//cst/CSTNode">
+      <eStructuralFeatures xsi:type="ecore:EReference" name="pathNameCS" eType="#//cst/PathNameCS"
+          containment="true"/>
+      <eStructuralFeatures xsi:type="ecore:EReference" name="contextDecls" upperBound="-1"
+          eType="#//cst/ContextDeclCS" containment="true"/>
+      <eStructuralFeatures xsi:type="ecore:EReference" name="packageDeclarationCS"
+          eType="#//cst/PackageDeclarationCS"/>
+    </eClassifiers>
+    <eClassifiers xsi:type="ecore:EClass" name="PathNameCS" eSuperTypes="#//cst/TypeCS">
+      <eStructuralFeatures xsi:type="ecore:EAttribute" name="sequenceOfNames" unique="false"
+          upperBound="-1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
+    </eClassifiers>
+    <eClassifiers xsi:type="ecore:EClass" name="PrePostOrBodyDeclCS" eSuperTypes="#//cst/CSTNode">
+      <eStructuralFeatures xsi:type="ecore:EAttribute" name="kind" eType="#//cst/PrePostOrBodyEnum"/>
+      <eStructuralFeatures xsi:type="ecore:EReference" name="simpleNameCS" eType="#//cst/SimpleNameCS"
+          containment="true"/>
+      <eStructuralFeatures xsi:type="ecore:EReference" name="expressionCS" eType="#//cst/OCLExpressionCS"
+          containment="true">
+        <eAnnotations source="http:///org/eclipse/emf/ecore/util/ExtendedMetaData">
+          <details key="name" value="oclExpressionCS"/>
+        </eAnnotations>
+      </eStructuralFeatures>
+    </eClassifiers>
+    <eClassifiers xsi:type="ecore:EClass" name="PrimitiveLiteralExpCS" eSuperTypes="#//cst/LiteralExpCS">
+      <eStructuralFeatures xsi:type="ecore:EAttribute" name="symbol" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
+    </eClassifiers>
+    <eClassifiers xsi:type="ecore:EClass" name="PrimitiveTypeCS" eSuperTypes="#//cst/SimpleNameCS #//cst/TypeCS"/>
+    <eClassifiers xsi:type="ecore:EClass" name="PropertyContextCS" eSuperTypes="#//cst/ContextDeclCS">
+      <eStructuralFeatures xsi:type="ecore:EReference" name="pathNameCS" eType="#//cst/PathNameCS"
+          containment="true"/>
+      <eStructuralFeatures xsi:type="ecore:EReference" name="simpleNameCS" eType="#//cst/SimpleNameCS"
+          containment="true"/>
+      <eStructuralFeatures xsi:type="ecore:EReference" name="typeCS" eType="#//cst/TypeCS"
+          containment="true"/>
+      <eStructuralFeatures xsi:type="ecore:EReference" name="initOrDerValueCS" eType="#//cst/InitOrDerValueCS"
+          containment="true"/>
+    </eClassifiers>
+    <eClassifiers xsi:type="ecore:EClass" name="RealLiteralExpCS" eSuperTypes="#//cst/PrimitiveLiteralExpCS">
+      <eStructuralFeatures xsi:type="ecore:EAttribute" name="realSymbol" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDoubleObject"/>
+    </eClassifiers>
+    <eClassifiers xsi:type="ecore:EClass" name="SimpleNameCS" eSuperTypes="#//cst/OCLExpressionCS">
+      <eStructuralFeatures xsi:type="ecore:EAttribute" name="value" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
+      <eStructuralFeatures xsi:type="ecore:EAttribute" name="type" eType="#//cst/SimpleTypeEnum"/>
+    </eClassifiers>
+    <eClassifiers xsi:type="ecore:EClass" name="StateExpCS" eSuperTypes="#//cst/TypeCS">
+      <eStructuralFeatures xsi:type="ecore:EAttribute" name="sequenceOfNames" upperBound="-1"
+          eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
+    </eClassifiers>
+    <eClassifiers xsi:type="ecore:EClass" name="StringLiteralExpCS" eSuperTypes="#//cst/PrimitiveLiteralExpCS">
+      <eStructuralFeatures xsi:type="ecore:EAttribute" name="stringSymbol" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
+    </eClassifiers>
+    <eClassifiers xsi:type="ecore:EClass" name="TupleLiteralExpCS" eSuperTypes="#//cst/LiteralExpCS">
+      <eStructuralFeatures xsi:type="ecore:EReference" name="variables" upperBound="-1"
+          eType="#//cst/VariableCS" containment="true"/>
+    </eClassifiers>
+    <eClassifiers xsi:type="ecore:EClass" name="TupleTypeCS" eSuperTypes="#//cst/TypeCS">
+      <eStructuralFeatures xsi:type="ecore:EReference" name="variables" lowerBound="1"
+          upperBound="-1" eType="#//cst/VariableCS" containment="true"/>
+    </eClassifiers>
+    <eClassifiers xsi:type="ecore:EClass" name="TypeCS" abstract="true" eSuperTypes="#//cst/OCLExpressionCS"/>
+    <eClassifiers xsi:type="ecore:EClass" name="UnlimitedNaturalLiteralExpCS" eSuperTypes="#//cst/PrimitiveLiteralExpCS">
+      <eStructuralFeatures xsi:type="ecore:EAttribute" name="integerSymbol" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EIntegerObject"/>
+    </eClassifiers>
+    <eClassifiers xsi:type="ecore:EClass" name="VariableCS" eSuperTypes="#//cst/CSTNode">
+      <eStructuralFeatures xsi:type="ecore:EAttribute" name="name" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
+      <eStructuralFeatures xsi:type="ecore:EReference" name="typeCS" eType="#//cst/TypeCS"
+          containment="true"/>
+      <eStructuralFeatures xsi:type="ecore:EReference" name="initExpression" eType="#//cst/OCLExpressionCS"
+          containment="true"/>
+    </eClassifiers>
+    <eClassifiers xsi:type="ecore:EClass" name="VariableExpCS" eSuperTypes="#//cst/OCLExpressionCS">
+      <eStructuralFeatures xsi:type="ecore:EReference" name="arguments" upperBound="-1"
+          eType="#//cst/OCLExpressionCS" containment="true"/>
+      <eStructuralFeatures xsi:type="ecore:EReference" name="simpleNameCS" eType="#//cst/SimpleNameCS"
+          containment="true"/>
+      <eStructuralFeatures xsi:type="ecore:EReference" name="isMarkedPreCS" eType="#//cst/IsMarkedPreCS"
+          containment="true"/>
+    </eClassifiers>
+    <eClassifiers xsi:type="ecore:EEnum" name="CollectionTypeIdentifierEnum">
+      <eLiterals name="Set" value="1"/>
+      <eLiterals name="Bag" value="2"/>
+      <eLiterals name="Sequence" value="3"/>
+      <eLiterals name="Collection" value="4"/>
+      <eLiterals name="OrderedSet" value="5"/>
+    </eClassifiers>
+    <eClassifiers xsi:type="ecore:EEnum" name="DotOrArrowEnum">
+      <eLiterals name="none" value="1"/>
+      <eLiterals name="dot" value="2"/>
+      <eLiterals name="arrow" value="3"/>
+    </eClassifiers>
+    <eClassifiers xsi:type="ecore:EEnum" name="MessageExpKind">
+      <eLiterals name="hasSent" value="1"/>
+      <eLiterals name="sent" value="2"/>
+    </eClassifiers>
+    <eClassifiers xsi:type="ecore:EEnum" name="PrePostOrBodyEnum">
+      <eLiterals name="pre" value="1"/>
+      <eLiterals name="post" value="2"/>
+      <eLiterals name="body" value="3"/>
+    </eClassifiers>
+    <eClassifiers xsi:type="ecore:EEnum" name="SimpleTypeEnum">
+      <eLiterals name="identifier" value="1"/>
+      <eLiterals name="self" value="2"/>
+      <eLiterals name="Integer" value="3"/>
+      <eLiterals name="String" value="4"/>
+      <eLiterals name="Real" value="5"/>
+      <eLiterals name="Boolean" value="6"/>
+      <eLiterals name="OclAny" value="7"/>
+      <eLiterals name="OclVoid" value="8"/>
+      <eLiterals name="Invalid" value="9"/>
+      <eLiterals name="OclMessage" value="10"/>
+      <eLiterals name="keyword" value="11"/>
+      <eLiterals name="UnlimitedNatural" value="12"/>
+    </eClassifiers>
+    <eClassifiers xsi:type="ecore:EDataType" name="IToken" instanceClassName="lpg.lpgjavaruntime.IToken"/>
+    <eClassifiers xsi:type="ecore:EDataType" name="Object" instanceClassName="java.lang.Object"/>
+  </eSubpackages>
+</ecore:EPackage>
